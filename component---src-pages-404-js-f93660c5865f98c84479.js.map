{"version":3,"file":"component---src-pages-404-js-f93660c5865f98c84479.js","mappings":"6LAyBA,EAtBkB,SAAC,GAA6B,IAA3BA,EAA0B,EAA1BA,SAAUC,EAAgB,EAAhBA,UAC7B,OACE,uBAAKC,UAAS,IAAKF,EAAW,aAAe,OAC3C,uBAAKE,UAAU,4BACb,sBAAIA,UAAU,qBAAd,WACA,uBAAKA,UAAU,sBACb,sBAAIA,UAAU,0BACXD,GAAaA,EAAUE,KAAI,SAACC,EAAMC,GAAP,OAC1B,sBACEC,IAAQF,EAAKG,KAAKC,KAAf,IAAuBH,EAC1BH,UAAU,gCAEV,gBAAC,EAAAO,KAAD,CAAMC,GAAG,MAAMN,EAAKG,KAAKC,eCHzC,EAVmB,SAAC,GAAwC,IAAtCG,EAAqC,EAArCA,MAAOC,EAA8B,EAA9BA,YAAaC,EAAiB,EAAjBA,WACxC,OACE,uBAAKX,UAAU,2BACb,sBAAIA,UAAU,qBAAqBS,GACnC,qBAAGT,UAAU,oBAAoBU,GACjC,0BAAQV,UAAU,mBAAmBW,KCuC3C,EAzCe,WAAO,IAAD,EACbC,GAAOC,EAAAA,EAAAA,gBAAe,cA4B5B,OACE,0BAAQb,UAAU,sBAAsBc,MAAO,CAAEC,gBAAgB,OAAQH,EAAKI,gBAAgBJ,KAAKK,WAAWC,MAAMC,IAApD,MAC9D,gBAAC,EAAD,CAAWpB,WAAW,UAAAa,EAAKI,gBAAgBJ,YAArB,eAA2BQ,aAAc,KAC/D,gBAAC,EAAD,CACET,WAAYC,EAAKI,gBAAgBJ,KAAKS,mBAAmBf,KACzDI,YAAaE,EAAKI,gBAAgBJ,KAAKF,YAAYJ,KACnDG,MAAOG,EAAKI,gBAAgBJ,KAAKH,MAAMH,SCxB/C,EAdoB,WAClB,OACE,uBAAKN,UAAU,6BACb,sBAAIA,UAAU,uBAAd,iBACA,uBAAKA,UAAU,yBACb,4BACE,yBAAOsB,YAAY,2BAA2BC,KAAK,QAAQlB,KAAK,UAChE,4CCsBV,EA1Be,WAAO,IAAD,EACbO,GAAOC,EAAAA,EAAAA,gBAAe,cAc5B,OACE,0BAAQb,UAAU,gBAChB,gBAAC,EAAD,MACA,gBAAC,EAAD,CACEF,SAAS,SACTC,WAAW,UAAAa,EAAKI,gBAAgBJ,YAArB,eAA2BQ,aAAc,OCa5D,EAxBe,SAAC,GAAkB,IAAD,EAAfI,EAAe,EAAfA,SACVZ,GAAOC,EAAAA,EAAAA,gBAAe,cAU5B,OACE,gCACE,gBAAC,EAAD,CAAQY,WAAW,UAAAb,EAAKc,KAAKC,oBAAV,eAAwBlB,QAAxB,UAClBe,EACD,gBAAC,EAAD,S,mDCnBN,UAPqB,kBACnB,gBAAC,IAAD,KACE,4CACA","sources":["webpack://gatsby-starter-default/./src/components/header/headerNav.js","webpack://gatsby-starter-default/./src/components/header/headerBody.js","webpack://gatsby-starter-default/./src/components/header/header.js","webpack://gatsby-starter-default/./src/components/footer/footerInput.js","webpack://gatsby-starter-default/./src/components/footer/footer.js","webpack://gatsby-starter-default/./src/components/layout.js","webpack://gatsby-starter-default/./src/pages/404.js"],"sourcesContent":["import { Link } from \"gatsby\"\nimport * as React from \"react\"\n\nconst HeaderNav = ({ position, dataLinks }) => {\n  return (\n    <nav className={`${position ? \"nav-footer\" : null}`}>\n      <div className=\"nav-wrapper container-md\">\n        <h3 className=\"nav-wrapper--logo\">Escape.</h3>\n        <div className=\"nav-wrapper--links\">\n          <ul className=\"nav-wrapper--links__ul\">\n            {dataLinks && dataLinks.map((link, index) => (\n              <li\n                key={`${link.name.text}-${index}`}\n                className=\"nav-wrapper--links__ul--link\"\n              >\n                <Link to=\"/#\">{link.name.text}</Link>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    </nav>\n  )\n}\n\nexport default HeaderNav\n","import * as React from \"react\"\n\nconst HeaderBody = ({ title, description, buttonName }) => {\n  return (\n    <div className=\"headerBody container-md\">\n      <h1 className=\"headerBody--title\">{title}</h1>\n      <p className=\"headerBody--text\">{description}</p>\n      <button className=\"headerBody--btn\">{buttonName}</button>\n    </div>\n  )\n}\n\nexport default HeaderBody\n","import * as React from \"react\"\nimport HeaderNav from \"./headerNav\"\nimport HeaderBody from \"./headerBody\"\nimport { graphql, useStaticQuery } from \"gatsby\"\n\nconst Header = () => {\n  const data = useStaticQuery(graphql`\n    query headerQueryPage {\n      prismicBlogPage {\n        data {\n          navigation {\n            name {\n              text\n            }\n          }\n          name_of_the_button {\n            text\n          }\n          description {\n            text\n          }\n          title {\n            text\n          }\n          main_image {\n            fluid {\n              src\n            }\n          }\n        }\n      }\n    }\n  `)\n\n  return (\n    <header className=\"header container-lg\" style={{ backgroundImage: `url(${data.prismicBlogPage.data.main_image.fluid.src})` }}>\n      <HeaderNav dataLinks={data.prismicBlogPage.data?.navigation || []} />\n      <HeaderBody\n        buttonName={data.prismicBlogPage.data.name_of_the_button.text}\n        description={data.prismicBlogPage.data.description.text}\n        title={data.prismicBlogPage.data.title.text}\n      />\n    </header>\n  )\n}\n\nexport default Header\n","import * as React from \"react\"\n\nconst FooterInput = () => {\n  return (\n    <div className='footer-input container-md'>\n      <h2 className=\"footer-input--title\">Stay in Touch</h2>\n      <div className='footer-input--wrapper'>\n        <form>\n          <input placeholder=\"Enter your email address\" type=\"email\" name=\"email\" />\n          <button>Submit</button>\n        </form>\n      </div>\n    </div>\n  )\n}\n\nexport default FooterInput\n","import { graphql, useStaticQuery } from \"gatsby\"\nimport * as React from \"react\"\nimport HeaderNav from \"../header/headerNav\"\nimport FooterInput from \"./footerInput\"\n\nconst Footer = () => {\n  const data = useStaticQuery(graphql`\n    query footerQueryPage {\n      prismicBlogPage {\n        data {\n          navigation {\n            name {\n              text\n            }\n          }\n        }\n      }\n    }\n  `)\n\n  return (\n    <footer className=\"container-lg\">\n      <FooterInput />\n      <HeaderNav\n        position=\"footer\"\n        dataLinks={data.prismicBlogPage.data?.navigation || []}\n      />\n    </footer>\n  )\n}\n\nexport default Footer\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header/header\"\nimport Footer from \"./footer/footer\"\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <Header siteTitle={data.site.siteMetadata?.title || `Title`} />\n      {children}\n      <Footer/>\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import * as React from \"react\"\nimport Layout from \"../components/layout\"\n\nconst NotFoundPage = () => (\n  <Layout>\n    <h1>404: Not Found</h1>\n    <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n  </Layout>\n)\n\nexport default NotFoundPage\n"],"names":["position","dataLinks","className","map","link","index","key","name","text","Link","to","title","description","buttonName","data","useStaticQuery","style","backgroundImage","prismicBlogPage","main_image","fluid","src","navigation","name_of_the_button","placeholder","type","children","siteTitle","site","siteMetadata"],"sourceRoot":""}