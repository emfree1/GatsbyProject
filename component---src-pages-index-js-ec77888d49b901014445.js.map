{"version":3,"file":"component---src-pages-index-js-ec77888d49b901014445.js","mappings":"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","sources":["webpack://gatsby-starter-default/./src/components/header/headerNav.js","webpack://gatsby-starter-default/./src/components/header/headerBody.js","webpack://gatsby-starter-default/./src/components/header/header.js","webpack://gatsby-starter-default/./src/components/footer/footerInput.js","webpack://gatsby-starter-default/./src/components/footer/footer.js","webpack://gatsby-starter-default/./src/components/layout.js","webpack://gatsby-starter-default/./src/components/main/filterPosts.js","webpack://gatsby-starter-default/./src/components/main/featurePosts/featurePost.js","webpack://gatsby-starter-default/./src/components/main/featurePosts/featurePosts.js","webpack://gatsby-starter-default/./src/components/main/mostRecent/recent.js","webpack://gatsby-starter-default/./src/components/main/mostRecent/mostRecent.js","webpack://gatsby-starter-default/./src/pages/index.js"],"sourcesContent":["import { Link } from \"gatsby\"\nimport * as React from \"react\"\n\nconst HeaderNav = ({ position, dataLinks }) => {\n  return (\n    <nav className={`${position ? \"nav-footer\" : null}`}>\n      <div className=\"nav-wrapper container-md\">\n        <h3 className=\"nav-wrapper--logo\">Escape.</h3>\n        <div className=\"nav-wrapper--links\">\n          <ul className=\"nav-wrapper--links__ul\">\n            {dataLinks && dataLinks.map((link, index) => (\n              <li\n                key={`${link.name.text}-${index}`}\n                className=\"nav-wrapper--links__ul--link\"\n              >\n                <Link to=\"/#\">{link.name.text}</Link>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    </nav>\n  )\n}\n\nexport default HeaderNav\n","import * as React from \"react\"\n\nconst HeaderBody = ({ title, description, buttonName }) => {\n  return (\n    <div className=\"headerBody container-md\">\n      <h1 className=\"headerBody--title\">{title}</h1>\n      <p className=\"headerBody--text\">{description}</p>\n      <button className=\"headerBody--btn\">{buttonName}</button>\n    </div>\n  )\n}\n\nexport default HeaderBody\n","import * as React from \"react\"\nimport HeaderNav from \"./headerNav\"\nimport HeaderBody from \"./headerBody\"\nimport { graphql, useStaticQuery } from \"gatsby\"\n\nconst Header = () => {\n  const data = useStaticQuery(graphql`\n    query headerQueryPage {\n      prismicBlogPage {\n        data {\n          navigation {\n            name {\n              text\n            }\n          }\n          name_of_the_button {\n            text\n          }\n          description {\n            text\n          }\n          title {\n            text\n          }\n          main_image {\n            fluid {\n              src\n            }\n          }\n        }\n      }\n    }\n  `)\n\n  return (\n    <header className=\"header container-lg\">\n      <HeaderNav dataLinks={data.prismicBlogPage.data?.navigation || []} />\n      <HeaderBody\n        buttonName={data.prismicBlogPage.data.name_of_the_button.text}\n        description={data.prismicBlogPage.data.description.text}\n        title={data.prismicBlogPage.data.title.text}\n      />\n    </header>\n  )\n}\n\nexport default Header\n","import * as React from \"react\"\n\nconst FooterInput = () => {\n  return (\n    <div className='footer-input container-md'>\n      <h2 className=\"footer-input--title\">Stay in Touch</h2>\n      <div className='footer-input--wrapper'>\n        <form>\n          <input placeholder=\"Enter your email address\" type=\"email\" name=\"email\" />\n          <button>Submit</button>\n        </form>\n      </div>\n    </div>\n  )\n}\n\nexport default FooterInput\n","import { graphql, useStaticQuery } from \"gatsby\"\nimport * as React from \"react\"\nimport HeaderNav from \"../header/headerNav\"\nimport FooterInput from \"./footerInput\"\n\nconst Footer = () => {\n  const data = useStaticQuery(graphql`\n    query footerQueryPage {\n      prismicBlogPage {\n        data {\n          navigation {\n            name {\n              text\n            }\n          }\n        }\n      }\n    }\n  `)\n\n  return (\n    <footer className=\"container-lg\">\n      <FooterInput />\n      <HeaderNav\n        position=\"footer\"\n        dataLinks={data.prismicBlogPage.data?.navigation || []}\n      />\n    </footer>\n  )\n}\n\nexport default Footer\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header/header\"\nimport Footer from \"./footer/footer\"\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <Header siteTitle={data.site.siteMetadata?.title || `Title`} />\n      {children}\n      <Footer/>\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import * as React from \"react\"\n\n\n const FilterPosts = ({collection, filterClick}) => {\n  return(\n    <div className='filter-posts container-lg'>\n      <div className='filter-posts--wrapper container-md'>\n\n        {collection.map((el,index) => (\n          <button onClick={() => filterClick(el)} key={`${el}-${index}`} className=\"filter-posts--wrapper__btn\">{el}</button>\n        ))}\n      </div>\n    </div>\n  )\n}\nexport default FilterPosts","import * as React from \"react\"\n\nconst FeaturePost= ({bgImg, title, description, author_image, author_name, published_date, is_label, title_of_label}) => {\n  \n  return (\n    <div className='feature-post' style={{backgroundImage: `url(${bgImg})`}}>\n      {is_label \n        ? <div className='feature-post--adventure'>\n          <p className=\"feature-post--adventure__text\">{title_of_label}</p>\n          </div>\n        : null}\n      <h3 className=\"feature-post--title\">{title}</h3>\n      <p className=\"feature-post--text\">{description}</p>\n      <div className='feature-post--user-info'>\n        <div className='feature-post--user-info__wrapper'>\n          <div className='feature-post--user-info__wrapper--logo'>\n            <img src={author_image} alt='user-logo' />\n          </div>\n          <p className=\"feature-post--user-info__wrapper--name\">{author_name}</p>\n        </div>\n        <p className=\"feature-post--user-info__date\">{published_date}</p>\n      </div>\n    </div>\n  )\n}\n\nexport default FeaturePost\n","import * as React from \"react\"\nimport FeaturePost from \"./featurePost\"\n\nconst FeaturePosts = ({ dataPosts }) => {\n\n  return (\n    <div className=\"feature-posts container-md\">\n      <h3 className=\"feature-posts--title\">Featured Posts</h3>\n      <div className=\"feature-posts--wrapper\">\n        {dataPosts?.map(post => (\n          <FeaturePost\n            key={post.uid}\n            title={post.data.title.text}\n            description={post.data.description.text}\n            author_image={post.data.author_image.fixed.src}\n            author_name={post.data.author_name.text}\n            published_date={post.data.published_date}\n            adventure={post.adventure}\n            bgImg={post.data.image.fluid.src}\n            title_of_label={post.data.title_of_label.text}\n            is_label={post.data.is_label}\n          />\n        ))}\n      </div>\n    </div>\n  )\n}\n\nexport default FeaturePosts\n","import * as React from \"react\"\n\nconst Recent = ({ bgImg, title, description, author_image, author_name, published_date }) => {\n  return (\n    <div className=\"recent-post\">\n      <div\n        style={{ backgroundImage: `url(${bgImg})` }}\n        className=\"recent-post--top-img\"\n      />\n      <div className=\"recent-post--bottom-info\">\n        <div className=\"recent-post--bottom-info__wrapper-text\">\n          <h3 className=\"recent-post--bottom-info__wrapper-text--title\">\n            {title}\n          </h3>\n          <p className=\"recent-post--bottom-info__wrapper-text--text\">\n            {description}\n          </p>\n        </div>\n        <div className=\"recent-post--bottom-info__user-info\">\n          <div className=\"recent-post--bottom-info__user-info--wrapper\">\n            <div className=\"recent-post--bottom-info__user-info--wrapper__logo\">\n              <img src={author_image} alt=\"user-logo\" />\n            </div>\n            <p className=\"recent-post--bottom-info__user-info--wrapper__name\">\n              {author_name}\n            </p>\n          </div>\n          <p className=\"recent-post--bottom-info__user-info--date\">{published_date}</p>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Recent\n","import * as React from \"react\"\nimport Recent from \"./recent\"\n\nconst MostRecent = ({ mostRecentData }) => {\n\n  return (\n    <div className=\"most-recent container-md\">\n      <h3 className=\"most-recent--title\"> Most Recent</h3>\n      <div className=\"most-recent--wrapper\">\n        {mostRecentData.map(post => (\n          <Recent\n            key={post.uid}\n            title={post.data.title.text}\n            description={post.data.description.text}\n            author_image={post.data.author_image.fixed.src}\n            author_name={post.data.author_name.text}\n            published_date={post.data.published_date}\n            bgImg={post.data.image.fluid.src}\n          />\n        ))}\n      </div>\n    </div>\n  )\n}\n\nexport default MostRecent\n","import * as React from \"react\"\nimport \"../styles/main.scss\"\nimport Layout from \"../components/layout\"\nimport FilterPosts from \"../components/main/filterPosts\"\nimport FeaturePosts from \"../components/main/featurePosts/featurePosts\"\nimport MostRecent from \"../components/main/mostRecent/mostRecent\"\nimport { graphql } from \"gatsby\"\n\nconst IndexPage = ({ data }) => {\n  const [dataPosts, setDataPost] = React.useState([])\n  const [collection, setCollection] = React.useState([])\n  const [featurePosts, setFeaturePosts] = React.useState([])\n  const [mostRecent, setMostRecent] = React.useState([])\n\n  const filterIsFeature = (data) => {\n    const filterIsFeature = data.allPrismicBlog.nodes.filter(el => el.data.is_feature)\n    setFeaturePosts([])\n    setFeaturePosts(prev => [...prev, ...filterIsFeature])\n\n    const filterMostRecent = data.allPrismicBlog.nodes.filter(el => !el.data.is_feature)\n    setMostRecent([])\n    setMostRecent(prev => [...prev, ...filterMostRecent])\n\n  }\n\n  React.useEffect(() => {\n    setDataPost(data)\n\n    const arr = []\n    data.allPrismicBlog.nodes.map((el, i) =>  arr.push(el.data.topic))\n\n    const setArr = [...new Set(arr)]\n    setCollection(setArr)\n\n    filterIsFeature(data)\n   \n\n  }, [data])\n\n  const filterPosts = (category) => {\n    if(category === \"All\") return filterIsFeature(dataPosts)\n\n    const postsFeature = dataPosts.allPrismicBlog.nodes.filter(post => post.data.topic === category && post.data.is_feature )\n    setFeaturePosts(postsFeature)\n\n    const postsRecent = dataPosts.allPrismicBlog.nodes.filter(post => post.data.topic === category && !post.data.is_feature )\n    setMostRecent(postsRecent)\n    \n  }\n\n  return (\n    <Layout>\n      <main>\n        <FilterPosts filterClick={filterPosts} collection={collection} />\n        <FeaturePosts dataPosts={featurePosts} />\n        <MostRecent mostRecentData={mostRecent} />\n      </main>\n    </Layout>\n  )\n}\n\nexport const dataQuery = graphql`\n  query MyQuery {\n    allPrismicBlog {\n      nodes {\n        data {\n          author_image {\n            fixed {\n              src\n            }\n          }\n          author_name {\n            text\n          }\n          description {\n            text\n          }\n          image {\n            fluid {\n              src\n            }\n          }\n          is_label\n          published_date\n          title {\n            text\n          }\n          title_of_label {\n            text\n          }\n          topic\n          is_feature\n        }\n        uid\n      }\n    }\n  }\n`\n\nexport default IndexPage\n"],"names":["position","dataLinks","className","map","link","index","key","name","text","Link","to","title","description","buttonName","data","useStaticQuery","prismicBlogPage","navigation","name_of_the_button","placeholder","type","children","siteTitle","site","siteMetadata","collection","filterClick","el","onClick","bgImg","author_image","author_name","published_date","is_label","title_of_label","style","backgroundImage","src","alt","dataPosts","post","uid","fixed","adventure","image","fluid","mostRecentData","React","setDataPost","setCollection","featurePosts","setFeaturePosts","mostRecent","setMostRecent","filterIsFeature","allPrismicBlog","nodes","filter","is_feature","prev","filterMostRecent","arr","i","push","topic","setArr","Set","category","postsFeature","postsRecent"],"sourceRoot":""}